{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{{ attach_library('newhomes/project') }}
{{ attach_library('newhomes/swiper') }}
{{ attach_library('newhomes/fontawesome') }}
<article{{ attributes }}>
    <div class="container">
        {{ title_prefix }}
        {{ title_suffix }}
        <div{{ content_attributes }}>
            <h1 class="node_title">{{ node.label }}</h1>
            <div class="row">
                <div class="col-lg-6">
                    <div class="video_youtube">{{ content.field_link_youtube }}</div>
                </div>
                <div class="col-lg-6">
                    <div class="project_info">
                        <div class="list_item">
                            {{ content.field_vi_tri }}
                            {{ content.field_loai_hinh_du_an }}
                            {{ content.field_chu_dau_tu }}
                            {{ content.field_tong_dien_tich }}
                            {{ content.field_tien_ich }}
                            {{ content.field_vai_tro_tham_gia }}
                            {{ content.field_doi_tac }}
                        </div>
                    </div>
                </div>
            </div>
            <div class="desc">
                <h2 class="title_field">{{ 'Mô tả dự án' | t }}</h2>
                {{ content.body }}
            </div>
            {# gallery  #}
            <div id="gallery_project">
                <h2 class="gallery_title">{{ 'Hình ảnh dự án' | t }}</h2>
                <div style="--swiper-navigation-color: #fff; --swiper-pagination-color: #fff" class="swiper-container gallery_project">
                    <div class="swiper-wrapper">
                    {% for key, item in node.field_images %}
                        {% if key matches '/^[-+]?[0-9]*\\.?[0-9]+$/' %}
                        <div class="swiper-slide">
                            <img src="{{ item.entity.uri.value | image_style('images_1920_x_810') }}" alt="{{ item.alt }}">
                        </div>
                        {% endif %}
                    {% endfor %}
                        
                    </div>
                    <div class="swiper-button-next"></div>
                    <div class="swiper-button-prev"></div>
                </div>
                <div thumbsSlider="" class="swiper-container gallery_project_thmub">
                    <div class="swiper-wrapper">
                        {% for key, item in node.field_images %}
                            {% if key matches '/^[-+]?[0-9]*\\.?[0-9]+$/' %}
                            <div class="swiper-slide">
                                <img src="{{ item.entity.uri.value | image_style('images_640_x_270') }}" alt="{{ item.alt }}">
                            </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</article>
{# Project other #}
<div id="project_other" class="bg-dark">
    <div class="container">
        <h2 class="block-title">{{ 'Dự án khác' | t }}</h2>
        {{ drupal_view('node_front_page', 'block_6', node.id, node.field_chuyen_muc[0].value['target_id'] ) }}
    </div>
</div>
